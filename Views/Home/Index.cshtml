@model List<Book>

<!DOCTYPE html>

<html>
<head>
    <title>title</title>
    <link rel="stylesheet" href="~/css/books.css" asp-append-version="true" />
</head>
<body>
<div style="margin: 10px 0; display: flex; justify-content: space-between; align-items: center; width: 100%;">
    <input type="text" id="searchInput" oninput="GetData()" placeholder="Search books..." style="padding: 15px; border-radius: 25px; border: 1px solid #ccc; width: 300px; font-family: 'Palanquin', sans-serif;" />
    @if (User.IsInRole("Admin"))
    {
        <div class="d-flex gap-2">
            <a href="#" onclick="openAddModal()" class="btn btn-outline-secondary" style="border-radius: 50px; padding: 8px 16px; font-family: 'Palanquin', sans-serif; font-weight: 500; background-color: white; color: #444444; border: 2px solid #444444;">Add New</a>
            <a href="#" onclick="openAssignModal()" class="btn btn-outline-secondary" style="border-radius: 50px; padding: 8px 16px; font-family: 'Palanquin', sans-serif; font-weight: 500; background-color: white; color: #444444; border: 2px solid #444444;">Assign Book</a>
        </div>
    }
</div>
    <div style="margin: 20px 0;">
        <a href="#" onclick="ShowAll(event)"><button type="button" class="filter-button all-btn">All Books</button></a>
        <a href="#" onclick="ShowAvailable(event)"><button type="button" class="filter-button available-btn">Available Books</button></a>
        <a href="#" onclick="ShowBorrowed(event)"><button type="button" class="filter-button borrowed-btn">Borrowed Books</button></a>
    </div>
    <div id="booksContainer">
        
    </div>
    <h2>Borrowed Books</h2>
    <div id="borrowedContainer">

    </div>
    
    <!-- Edit Book Modal -->
    <div id="editModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h3>Edit Book</h3>
            <form id="editBookForm">
                <input type="hidden" id="editBookId" />
                <div class="form-group">
                    <label for="editTitle">Title:</label>
                    <input type="text" id="editTitle" required />
                </div>
                <div class="form-group">
                    <label for="editAuthor">Author:</label>
                    <input type="text" id="editAuthor" required />
                </div>
                <div class="form-group">
                    <label for="editGenre">Genre:</label>
                    <input type="text" id="editGenre" required />
                </div>
                <div class="form-group">
                    <label for="editPublishedDate">Published Date:</label>
                    <input type="date" id="editPublishedDate" required />
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    <button type="button" class="btn btn-secondary" onclick="closeEditModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Add New Book Modal -->
    <div id="addModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h3>Add New Book</h3>
            <form id="addBookForm">
                <div class="form-group">
                    <label for="addTitle">Title:</label>
                    <input type="text" id="addTitle" required />
                </div>
                <div class="form-group">
                    <label for="addAuthor">Author:</label>
                    <input type="text" id="addAuthor" required />
                </div>
                <div class="form-group">
                    <label for="addGenre">Genre:</label>
                    <input type="text" id="addGenre" required />
                </div>
                <div class="form-group">
                    <label for="addPublishedDate">Published Date:</label>
                    <input type="date" id="addPublishedDate" required />
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Add Book</button>
                    <button type="button" class="btn btn-secondary" onclick="closeAddModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Assign Book Modal -->
    <div id="assignModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h3>Assign Book</h3>
            <form id="assignBookForm">
                <div class="form-group">
                    <label for="assignBookId">Select Book:</label>
                    <select id="assignBookId" required>
                        <option value="">Choose a book...</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="assignBorrower">Borrower:</label>
                    <input type="text" id="assignBorrower" required placeholder="Enter borrower name" />
                </div>
                <div class="form-group">
                    <label for="assignReturnDate">Return Date:</label>
                    <input type="date" id="assignReturnDate" required min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")" />
                    <small class="text-muted">Return date must be in the future</small>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Assign Book</button>
                    <button type="button" class="btn btn-secondary" onclick="closeAssignModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Borrow Book Modal -->
    <div id="borrowModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h3>Borrow Book</h3>
            <form id="borrowBookForm">
                <input type="hidden" id="borrowBookId" />
                <div class="form-group">
                    <label for="borrowReturnDate">Return Date:</label>
                    <input type="date" id="borrowReturnDate" required min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")" />
                    <small class="text-muted">Return date must be in the future</small>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Borrow Book</button>
                    <button type="button" class="btn btn-secondary" onclick="closeBorrowModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</body>
</html>
@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <partial name="_ValidationScriptsPartial"/>
    <script>
        function GetData() {
            $.ajax({
                url: '/Home/Search',
                type: 'GET',
                data: { title: $('#searchInput').val() },
                success: function(result) {
                    document.getElementById('booksContainer').innerHTML = result;
                },
                error: function(xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        };
        
        function ShowAvailable(event) {
            event.preventDefault();
            $.ajax({
                url: '/Home/GetAvailableBooks',
                type: 'GET',
                success: function(result) {
                    document.getElementById('booksContainer').innerHTML = result;
                },
                error: function(xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }

        function ShowAll(event) {
            event.preventDefault();
            $.ajax({
                url: '/Home/GetAllBooks',
                type: 'GET',
                success: function(result) {
                    document.getElementById('booksContainer').innerHTML = result;
                },
                error: function(xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }

        function ShowBorrowed(event) {
            event.preventDefault();
            $.ajax({
                url: '/Home/GetBorrowedBooks',
                type: 'GET',
                success: function(result) {
                    document.getElementById('booksContainer').innerHTML = result;
                },
                error: function(xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }

        function DeleteBook(event, id) {
            event.preventDefault();
            $.ajax({
                url: '/Home/DeleteBook?id=' + id,
                type: 'DELETE',
                success: function(result) {
                    // Refresh the current view state
                    GetData();
                },
                error: function(xhr, status, error) {
                    alert('Failed to delete book.');
                }
            });
        }

        function DeleteBorrowed(event, id) {
            event.preventDefault();
            $.ajax({
                url: '/Home/ReturnBook?id=' + id,
                type: 'POST',
                success: function(result) {
                    // Refresh the current view state
                    GetData();
                    $("#borrowedContainer").load("/Home/GetBorrowers");
                },
                error: function(xhr, status, error) {
                    alert('Failed to return book.');
                }
            });
        }

        function openEditModal(id, title, author, genre, publishedDate) {
            document.getElementById('editBookId').value = id;
            document.getElementById('editTitle').value = title;
            document.getElementById('editAuthor').value = author;
            document.getElementById('editGenre').value = genre;
            document.getElementById('editPublishedDate').value = publishedDate;
            document.getElementById('editModal').style.display = 'flex';
        }

        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        function openAddModal() {
            // Clear the form
            document.getElementById('addBookForm').reset();
            document.getElementById('addModal').style.display = 'flex';
        }

        function closeAddModal() {
            document.getElementById('addModal').style.display = 'none';
        }

        function openAssignModal() {
            // Clear the form
            document.getElementById('assignBookForm').reset();
            // Load available books
            loadAvailableBooks();
            document.getElementById('assignModal').style.display = 'flex';
        }

        function closeAssignModal() {
            document.getElementById('assignModal').style.display = 'none';
        }

        function openBorrowModal(bookId, bookTitle, bookAuthor) {
            // Set the book information
            document.getElementById('borrowBookId').value = bookId;
            // Clear the form
            document.getElementById('borrowBookForm').reset();
            document.getElementById('borrowModal').style.display = 'flex';
        }

        function closeBorrowModal() {
            document.getElementById('borrowModal').style.display = 'none';
        }

        function returnBook(bookId) {
            if (confirm('Are you sure you want to return this book?')) {
                $.ajax({
                    url: '/Home/ReturnBook?id=' + bookId,
                    type: 'POST',
                    success: function(result) {
                        GetData();
                        $("#borrowedContainer").load("/Home/GetBorrowers");
                        alert('Book returned successfully!');
                    },
                    error: function(xhr, status, error) {
                        alert('Failed to return book.');
                    }
                });
            }
        }

        function loadAvailableBooks() {
            $.ajax({
                url: '/Home/GetAvailableBooksForAssignment',
                type: 'GET',
                success: function(result) {
                    var select = document.getElementById('assignBookId');
                    select.innerHTML = '<option value="">Choose a book...</option>';
                    
                    result.forEach(function(book) {
                        var option = document.createElement('option');
                        option.value = book.id;
                        option.textContent = book.title + ' by ' + book.author;
                        select.appendChild(option);
                    });
                },
                error: function(xhr, status, error) {
                    console.error('Error loading available books:', error);
                }
            });
        }

        // Close modal when clicking on X or outside the modal
        $(document).ready(function() {
            $('.close').click(function() {
                closeEditModal();
                closeAddModal();
                closeAssignModal();
                closeBorrowModal();
            });

            $(window).click(function(event) {
                if (event.target == document.getElementById('editModal')) {
                    closeEditModal();
                }
                if (event.target == document.getElementById('addModal')) {
                    closeAddModal();
                }
                if (event.target == document.getElementById('assignModal')) {
                    closeAssignModal();
                }
                if (event.target == document.getElementById('borrowModal')) {
                    closeBorrowModal();
                }
            });

            // Handle edit form submission
            $('#editBookForm').submit(function(e) {
                e.preventDefault();
                
                var bookData = {
                    Id: $('#editBookId').val(),
                    Title: $('#editTitle').val(),
                    Author: $('#editAuthor').val(),
                    Genre: $('#editGenre').val(),
                    PublishedDate: $('#editPublishedDate').val()
                };

                $.ajax({
                    url: '/Home/UpdateBook',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(bookData),
                    success: function(result) {
                        closeEditModal();
                        GetData();
                        alert('Book updated successfully!');
                    },
                    error: function(xhr, status, error) {
                        alert('Failed to update book.');
                    }
                });
            });

            // Handle add form submission
            $('#addBookForm').submit(function(e) {
                e.preventDefault();
                
                var bookData = {
                    Title: $('#addTitle').val(),
                    Author: $('#addAuthor').val(),
                    Genre: $('#addGenre').val(),
                    PublishedDate: $('#addPublishedDate').val(),
                    Status: 'Available' // New books are always available
                };

                $.ajax({
                    url: '/Home/AddBook',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(bookData),
                    success: function(result) {
                        closeAddModal();
                        GetData();
                        alert('Book added successfully!');
                    },
                    error: function(xhr, status, error) {
                        alert('Failed to add book.');
                    }
                });
            });

            // Handle assign form submission
            $('#assignBookForm').submit(function(e) {
                e.preventDefault();
                
                // Validate return date
                var returnDate = new Date($('#assignReturnDate').val());
                var today = new Date();
                today.setHours(0, 0, 0, 0);
                
                if (returnDate <= today) {
                    alert('Return date must be in the future (after today).');
                    return;
                }
                
                var assignData = {
                    BookId: $('#assignBookId').val(),
                    BorrowerName: $('#assignBorrower').val(),
                    ReturnDate: $('#assignReturnDate').val()
                };

                $.ajax({
                    url: '/Home/AssignBook',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(assignData),
                    success: function(result) {
                        closeAssignModal();
                        GetData();
                        $("#borrowedContainer").load("/Home/GetBorrowers");
                        alert('Book assigned successfully!');
                    },
                    error: function(xhr, status, error) {
                        alert('Failed to assign book.');
                    }
                });
            });

            // Handle borrow form submission
            $('#borrowBookForm').submit(function(e) {
                e.preventDefault();
                
                // Validate return date
                var returnDate = new Date($('#borrowReturnDate').val());
                var today = new Date();
                today.setHours(0, 0, 0, 0);
                
                if (returnDate <= today) {
                    alert('Return date must be in the future (after today).');
                    return;
                }
                
                var borrowData = {
                    BookId: $('#borrowBookId').val(),
                    ReturnDate: $('#borrowReturnDate').val()
                };

                $.ajax({
                    url: '/Home/BorrowBook',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(borrowData),
                    success: function(result) {
                        closeBorrowModal();
                        GetData();
                        $("#borrowedContainer").load("/Home/GetBorrowers");
                        alert('Book borrowed successfully!');
                    },
                    error: function(xhr, status, error) {
                        alert('Failed to borrow book.');
                    }
                });
            });
        });

        $(document).ready(function() {
            GetData();
        });

        $(document).ready(function () {
            $("#borrowedContainer").load("/Home/GetBorrowers");
        });
    </script>
}
    